% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vcf_sanity_check.R
\name{vcf_sanity_check}
\alias{vcf_sanity_check}
\title{Perform a Sanity Check on a VCF File}
\usage{
vcf_sanity_check(
  vcf_path,
  n_data_lines = 100,
  max_markers = 10000,
  depth_support_fields = c("AD", "RA", "AO", "RO", "NR", "NV", "SB", "F1R2", "F2R1"),
  verbose = FALSE
)
}
\arguments{
\item{vcf_path}{A character string specifying the path to the VCF file. The file can be plain text or gzipped.}

\item{n_data_lines}{An integer specifying the number of data lines to sample for detailed checks. Default is 100.}

\item{max_markers}{An integer specifying the maximum number of markers allowed in the VCF file. Default is 10,000.}

\item{depth_support_fields}{(Optional) A character vector of fields that are expected to be present in the FORMAT column for allele counts. Default is \code{c("AD", "RA", "AO", "RO", "NR", "NV", "SB", "F1R2", "F2R1")}.}

\item{verbose}{A logical value indicating whether to print detailed messages during the checks. Default is FALSE.}
}
\value{
A list containing:
\itemize{
\item \code{checks}: A named vector indicating the results of each check (TRUE or FALSE).
\item \code{messages}: A data frame containing messages for each check, indicating success or failure.
\item \code{duplicates}: A list containing any duplicated sample or marker IDs found in the VCF file.
\item \code{ploidy_max}: The maximum ploidy detected from the genotype field, if applicable.
}
}
\description{
This function performs a series of checks on a VCF file to ensure its validity and integrity. It verifies the presence of required headers, columns, and data fields, and checks for common issues such as missing or malformed data.
}
\details{
The function performs the following checks:
\itemize{
\item \strong{VCF_header}: Verifies the presence of the \verb{##fileformat} header.
\item \strong{VCF_compressed}: Checks if the VCF file is compressed and if the extension is correct.
\item \strong{VCF_columns}: Ensures required columns (\verb{#CHROM}, \code{POS}, \code{ID}, \code{REF}, \code{ALT}, \code{QUAL}, \code{FILTER}, \code{INFO}) are present.
\item \strong{max_markers}: Checks if the total number of markers exceeds the specified limit.
\item \strong{unique_FORMAT}: Ensures that the FORMAT fields are consistent across sampled markers.
\item \strong{GT}: Verifies the presence of the \code{GT} (genotype) field in the FORMAT column.
\item \strong{allele_counts}: Checks for allele-level count fields (e.g., \code{AD}, \code{RA}, \code{AO}, \code{RO}).
\item \strong{samples}: Ensures sample/genotype columns are present.
\item \strong{chrom_info} and \strong{pos_info}: Verifies the presence of \code{CHROM} and \code{POS} columns.
\item \strong{ref_alt}: Ensures \code{REF} and \code{ALT} fields contain valid nucleotide codes.
\item \strong{multiallelics}: Identifies multiallelic sites (ALT field with commas).
\item \strong{phased_GT}: Checks for phased genotypes (presence of \code{|} in the \code{GT} field).
\item \strong{duplicated_samples}: Checks for duplicated sample IDs.
\item \strong{duplicated_markers}: Checks for duplicated marker IDs.
}
}
